;All profiles use the following strategies:
;    LIKE:  like-tag
;    SCORE: score-new

breed [profiles1 profile1]
breed [profiles2 profile2]

directed-link-breed [connect-links connect-link] ;Like and follow are basically the same thing, one is when it connects a user to documents, the other is when it connect them to peers
directed-link-breed [memory-links memory-link] ;used to remember when something last turned up in topk/topm
directed-link-breed [rank-links rank-link] ;Used to create temporary perspective based ranks

;topk-memory stores documents that have appeared in topk before
profiles1-own [max-k max-m topk-memory]
profiles2-own [max-k max-m topk-memory]
connect-links-own [timestamp]
memory-links-own [timestamp]
rank-links-own []

to profiles-setup [k m tag-count tag-list]
  turtles-layout ;Standard layout
  set score 0
  set turns 0
  set max-k k
  set max-m m
  set document? false
  set active? true
  set tags n-of tag-count tag-list
  set topk-memory []
end

to profiles1-go
  show self
  let topk topk-random
  let topm topm-random
  let likes like-tag topk
  let follows follow-everything topm
  let publish publish-random
  
  ;Add timestamp to existing memory links
  ask my-out-memory-links with [member? end2 (sentence topk topm)][
     set timestamp lput ticks timestamp 
  ]
  
  ;Create memory-links to new topk and topm results
  create-memory-links-to (turtle-set (sentence topk topm)) with [not in-memory-link-neighbor? myself][
     set timestamp (list ticks)
     set color pink
  ]
  
  ;Add timestamp to existing connecting links
  ask my-out-connect-links with [member? end2 (sentence likes follows)][
     set timestamp lput ticks timestamp 
  ]
  
  ;Create memory-links to new like and follow results
  create-connect-links-to (turtle-set (sentence likes follows)) with [not in-connect-link-neighbor? myself][
     set timestamp (list ticks)
     set color orange
  ]
end
